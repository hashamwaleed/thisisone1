/*
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.amazon.webservices.models;

import java.util.*;

public class RequestBuilder {
    //the instance to build
    private Request request;

    /**
     * Default constructor to initialize the instance
     */
    public RequestBuilder() {
        request = new Request();
    }

    public RequestBuilder isValid(String isValid) {
        request.setIsValid(isValid);
        return this;
    }

    public RequestBuilder browseNodeLookupRequest(BrowseNodeLookupRequest browseNodeLookupRequest) {
        request.setBrowseNodeLookupRequest(browseNodeLookupRequest);
        return this;
    }

    public RequestBuilder itemSearchRequest(ItemSearchRequest itemSearchRequest) {
        request.setItemSearchRequest(itemSearchRequest);
        return this;
    }

    public RequestBuilder itemLookupRequest(ItemLookupRequest itemLookupRequest) {
        request.setItemLookupRequest(itemLookupRequest);
        return this;
    }

    public RequestBuilder similarityLookupRequest(SimilarityLookupRequest similarityLookupRequest) {
        request.setSimilarityLookupRequest(similarityLookupRequest);
        return this;
    }

    public RequestBuilder cartGetRequest(CartGetRequest cartGetRequest) {
        request.setCartGetRequest(cartGetRequest);
        return this;
    }

    public RequestBuilder cartAddRequest(CartAddRequest cartAddRequest) {
        request.setCartAddRequest(cartAddRequest);
        return this;
    }

    public RequestBuilder cartCreateRequest(CartCreateRequest55 cartCreateRequest) {
        request.setCartCreateRequest(cartCreateRequest);
        return this;
    }

    public RequestBuilder cartModifyRequest(CartModifyRequest56 cartModifyRequest) {
        request.setCartModifyRequest(cartModifyRequest);
        return this;
    }

    public RequestBuilder cartClearRequest(CartClearRequest cartClearRequest) {
        request.setCartClearRequest(cartClearRequest);
        return this;
    }

    public RequestBuilder errors(Errors errors) {
        request.setErrors(errors);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Request build() {
        return request;
    }
}