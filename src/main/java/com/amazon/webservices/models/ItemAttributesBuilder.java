/*
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.amazon.webservices.models;

import java.util.*;

public class ItemAttributesBuilder {
    //the instance to build
    private ItemAttributes itemAttributes;

    /**
     * Default constructor to initialize the instance
     */
    public ItemAttributesBuilder() {
        itemAttributes = new ItemAttributes();
    }

    public ItemAttributesBuilder actor(List<String> actor) {
        itemAttributes.setActor(actor);
        return this;
    }

    public ItemAttributesBuilder artist(List<String> artist) {
        itemAttributes.setArtist(artist);
        return this;
    }

    public ItemAttributesBuilder aspectRatio(String aspectRatio) {
        itemAttributes.setAspectRatio(aspectRatio);
        return this;
    }

    public ItemAttributesBuilder audienceRating(AudienceRatingEnum audienceRating) {
        itemAttributes.setAudienceRating(audienceRating);
        return this;
    }

    public ItemAttributesBuilder audioFormat(List<String> audioFormat) {
        itemAttributes.setAudioFormat(audioFormat);
        return this;
    }

    public ItemAttributesBuilder author(List<String> author) {
        itemAttributes.setAuthor(author);
        return this;
    }

    public ItemAttributesBuilder binding(String binding) {
        itemAttributes.setBinding(binding);
        return this;
    }

    public ItemAttributesBuilder brand(String brand) {
        itemAttributes.setBrand(brand);
        return this;
    }

    public ItemAttributesBuilder catalogNumberList(CatalogNumberList catalogNumberList) {
        itemAttributes.setCatalogNumberList(catalogNumberList);
        return this;
    }

    public ItemAttributesBuilder category(List<String> category) {
        itemAttributes.setCategory(category);
        return this;
    }

    public ItemAttributesBuilder cEROAgeRating(String cEROAgeRating) {
        itemAttributes.setCEROAgeRating(cEROAgeRating);
        return this;
    }

    public ItemAttributesBuilder clothingSize(String clothingSize) {
        itemAttributes.setClothingSize(clothingSize);
        return this;
    }

    public ItemAttributesBuilder color(String color) {
        itemAttributes.setColor(color);
        return this;
    }

    public ItemAttributesBuilder creator(List<Creator> creator) {
        itemAttributes.setCreator(creator);
        return this;
    }

    public ItemAttributesBuilder department(String department) {
        itemAttributes.setDepartment(department);
        return this;
    }

    public ItemAttributesBuilder director(List<String> director) {
        itemAttributes.setDirector(director);
        return this;
    }

    public ItemAttributesBuilder eAN(String eAN) {
        itemAttributes.setEAN(eAN);
        return this;
    }

    public ItemAttributesBuilder eANList(EANList eANList) {
        itemAttributes.setEANList(eANList);
        return this;
    }

    public ItemAttributesBuilder edition(String edition) {
        itemAttributes.setEdition(edition);
        return this;
    }

    public ItemAttributesBuilder eISBN(List<String> eISBN) {
        itemAttributes.setEISBN(eISBN);
        return this;
    }

    public ItemAttributesBuilder energyEfficiencyClass(String energyEfficiencyClass) {
        itemAttributes.setEnergyEfficiencyClass(energyEfficiencyClass);
        return this;
    }

    public ItemAttributesBuilder episodeSequence(String episodeSequence) {
        itemAttributes.setEpisodeSequence(episodeSequence);
        return this;
    }

    public ItemAttributesBuilder eSRBAgeRating(String eSRBAgeRating) {
        itemAttributes.setESRBAgeRating(eSRBAgeRating);
        return this;
    }

    public ItemAttributesBuilder feature(List<String> feature) {
        itemAttributes.setFeature(feature);
        return this;
    }

    public ItemAttributesBuilder format(List<String> format) {
        itemAttributes.setFormat(format);
        return this;
    }

    public ItemAttributesBuilder genre(String genre) {
        itemAttributes.setGenre(genre);
        return this;
    }

    public ItemAttributesBuilder hardwarePlatform(String hardwarePlatform) {
        itemAttributes.setHardwarePlatform(hardwarePlatform);
        return this;
    }

    public ItemAttributesBuilder hazardousMaterialType(String hazardousMaterialType) {
        itemAttributes.setHazardousMaterialType(hazardousMaterialType);
        return this;
    }

    public ItemAttributesBuilder isAdultProduct(Boolean isAdultProduct) {
        itemAttributes.setIsAdultProduct(isAdultProduct);
        return this;
    }

    public ItemAttributesBuilder isAutographed(Boolean isAutographed) {
        itemAttributes.setIsAutographed(isAutographed);
        return this;
    }

    public ItemAttributesBuilder iSBN(String iSBN) {
        itemAttributes.setISBN(iSBN);
        return this;
    }

    public ItemAttributesBuilder isEligibleForTradeIn(Boolean isEligibleForTradeIn) {
        itemAttributes.setIsEligibleForTradeIn(isEligibleForTradeIn);
        return this;
    }

    public ItemAttributesBuilder isMemorabilia(Boolean isMemorabilia) {
        itemAttributes.setIsMemorabilia(isMemorabilia);
        return this;
    }

    public ItemAttributesBuilder issuesPerYear(String issuesPerYear) {
        itemAttributes.setIssuesPerYear(issuesPerYear);
        return this;
    }

    public ItemAttributesBuilder itemDimensions(ItemDimensions itemDimensions) {
        itemAttributes.setItemDimensions(itemDimensions);
        return this;
    }

    public ItemAttributesBuilder itemPartNumber(String itemPartNumber) {
        itemAttributes.setItemPartNumber(itemPartNumber);
        return this;
    }

    public ItemAttributesBuilder label(String label) {
        itemAttributes.setLabel(label);
        return this;
    }

    public ItemAttributesBuilder languages(Languages languages) {
        itemAttributes.setLanguages(languages);
        return this;
    }

    public ItemAttributesBuilder legalDisclaimer(String legalDisclaimer) {
        itemAttributes.setLegalDisclaimer(legalDisclaimer);
        return this;
    }

    public ItemAttributesBuilder listPrice(Price listPrice) {
        itemAttributes.setListPrice(listPrice);
        return this;
    }

    public ItemAttributesBuilder magazineType(String magazineType) {
        itemAttributes.setMagazineType(magazineType);
        return this;
    }

    public ItemAttributesBuilder manufacturer(String manufacturer) {
        itemAttributes.setManufacturer(manufacturer);
        return this;
    }

    public ItemAttributesBuilder manufacturerMaximumAge(DecimalWithUnits manufacturerMaximumAge) {
        itemAttributes.setManufacturerMaximumAge(manufacturerMaximumAge);
        return this;
    }

    public ItemAttributesBuilder manufacturerMinimumAge(DecimalWithUnits manufacturerMinimumAge) {
        itemAttributes.setManufacturerMinimumAge(manufacturerMinimumAge);
        return this;
    }

    public ItemAttributesBuilder manufacturerPartsWarrantyDescription(String manufacturerPartsWarrantyDescription) {
        itemAttributes.setManufacturerPartsWarrantyDescription(manufacturerPartsWarrantyDescription);
        return this;
    }

    public ItemAttributesBuilder mediaType(String mediaType) {
        itemAttributes.setMediaType(mediaType);
        return this;
    }

    public ItemAttributesBuilder model(String model) {
        itemAttributes.setModel(model);
        return this;
    }

    public ItemAttributesBuilder modelYear(Integer modelYear) {
        itemAttributes.setModelYear(modelYear);
        return this;
    }

    public ItemAttributesBuilder mPN(String mPN) {
        itemAttributes.setMPN(mPN);
        return this;
    }

    public ItemAttributesBuilder numberOfDiscs(Integer numberOfDiscs) {
        itemAttributes.setNumberOfDiscs(numberOfDiscs);
        return this;
    }

    public ItemAttributesBuilder numberOfIssues(Integer numberOfIssues) {
        itemAttributes.setNumberOfIssues(numberOfIssues);
        return this;
    }

    public ItemAttributesBuilder numberOfItems(Integer numberOfItems) {
        itemAttributes.setNumberOfItems(numberOfItems);
        return this;
    }

    public ItemAttributesBuilder numberOfPages(Integer numberOfPages) {
        itemAttributes.setNumberOfPages(numberOfPages);
        return this;
    }

    public ItemAttributesBuilder numberOfTracks(Integer numberOfTracks) {
        itemAttributes.setNumberOfTracks(numberOfTracks);
        return this;
    }

    public ItemAttributesBuilder operatingSystem(String operatingSystem) {
        itemAttributes.setOperatingSystem(operatingSystem);
        return this;
    }

    public ItemAttributesBuilder packageDimensions(PackageDimensions packageDimensions) {
        itemAttributes.setPackageDimensions(packageDimensions);
        return this;
    }

    public ItemAttributesBuilder packageQuantity(Integer packageQuantity) {
        itemAttributes.setPackageQuantity(packageQuantity);
        return this;
    }

    public ItemAttributesBuilder partNumber(String partNumber) {
        itemAttributes.setPartNumber(partNumber);
        return this;
    }

    public ItemAttributesBuilder pictureFormat(List<String> pictureFormat) {
        itemAttributes.setPictureFormat(pictureFormat);
        return this;
    }

    public ItemAttributesBuilder platform(List<String> platform) {
        itemAttributes.setPlatform(platform);
        return this;
    }

    public ItemAttributesBuilder productGroup(String productGroup) {
        itemAttributes.setProductGroup(productGroup);
        return this;
    }

    public ItemAttributesBuilder productTypeName(String productTypeName) {
        itemAttributes.setProductTypeName(productTypeName);
        return this;
    }

    public ItemAttributesBuilder productTypeSubcategory(String productTypeSubcategory) {
        itemAttributes.setProductTypeSubcategory(productTypeSubcategory);
        return this;
    }

    public ItemAttributesBuilder publicationDate(String publicationDate) {
        itemAttributes.setPublicationDate(publicationDate);
        return this;
    }

    public ItemAttributesBuilder publisher(String publisher) {
        itemAttributes.setPublisher(publisher);
        return this;
    }

    public ItemAttributesBuilder regionCode(String regionCode) {
        itemAttributes.setRegionCode(regionCode);
        return this;
    }

    public ItemAttributesBuilder releaseDate(String releaseDate) {
        itemAttributes.setReleaseDate(releaseDate);
        return this;
    }

    public ItemAttributesBuilder seasonSequence(String seasonSequence) {
        itemAttributes.setSeasonSequence(seasonSequence);
        return this;
    }

    public ItemAttributesBuilder runningTime(DecimalWithUnits runningTime) {
        itemAttributes.setRunningTime(runningTime);
        return this;
    }

    public ItemAttributesBuilder seikodoProductCode(String seikodoProductCode) {
        itemAttributes.setSeikodoProductCode(seikodoProductCode);
        return this;
    }

    public ItemAttributesBuilder size(String size) {
        itemAttributes.setSize(size);
        return this;
    }

    public ItemAttributesBuilder sKU(String sKU) {
        itemAttributes.setSKU(sKU);
        return this;
    }

    public ItemAttributesBuilder studio(String studio) {
        itemAttributes.setStudio(studio);
        return this;
    }

    public ItemAttributesBuilder subscriptionLength(NonNegativeIntegerWithUnits subscriptionLength) {
        itemAttributes.setSubscriptionLength(subscriptionLength);
        return this;
    }

    public ItemAttributesBuilder title(String title) {
        itemAttributes.setTitle(title);
        return this;
    }

    public ItemAttributesBuilder trackSequence(String trackSequence) {
        itemAttributes.setTrackSequence(trackSequence);
        return this;
    }

    public ItemAttributesBuilder tradeInValue(Price tradeInValue) {
        itemAttributes.setTradeInValue(tradeInValue);
        return this;
    }

    public ItemAttributesBuilder uPC(String uPC) {
        itemAttributes.setUPC(uPC);
        return this;
    }

    public ItemAttributesBuilder uPCList(UPCList uPCList) {
        itemAttributes.setUPCList(uPCList);
        return this;
    }

    public ItemAttributesBuilder warranty(String warranty) {
        itemAttributes.setWarranty(warranty);
        return this;
    }

    public ItemAttributesBuilder wEEETaxValue(Price wEEETaxValue) {
        itemAttributes.setWEEETaxValue(wEEETaxValue);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public ItemAttributes build() {
        return itemAttributes;
    }
}